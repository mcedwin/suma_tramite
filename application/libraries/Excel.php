<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

require_once('excel/PHPExcel.php');

class Excel {

	public function excel_init() {
		// Create new PHPExcel object
		$objPHPExcel = new PHPExcel();
		// Set properties
		$objPHPExcel->getProperties()->setCreator("Sistema de Tramite")
				->setLastModifiedBy("Tramite")
				->setTitle("Reporte Tramite")
				->setSubject("Reporte Tramite")
				->setDescription("Report Generated by Tramite")
				->setKeywords("reporte")
				->setCategory("Reportes");
		return $objPHPExcel;
	}

	public function excel_output($objPHPExcel, $filename, $tipo = "EXCEL") {
		if ($tipo == "EXCEL") {
			// Redirect output to a client’s web browser (Excel5)
			header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
			header('Content-Disposition: attachment;filename="' . $filename . '.xls"');
			header('Cache-Control: max-age=0');

			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
			//ob_end_clean();
			$objWriter->save('php://output');
			exit;
		} elseif ($tipo == "PDF") {
			header('Content-Type: application/pdf');
			header('Content-Disposition: attachment;filename="' . $filename . '.pdf"');
			header('Cache-Control: max-age=0');

			$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'PDF');
			$objWriter->save('php://output');
			exit;
		}
	}
	
	public function write_table($objPHPExcel,$datos = NULL,$indx=1,$indy = 'A') {

        $array_datos = $datos;
 
        $resul = array('indx'=>$indx,'indy'=>$indy);
        
        if(count($array_datos)>0){
            $indyy = PHPExcel_Cell::columnIndexFromString($indy)-1;
            //write array
            $titulos = array_keys($array_datos[0]);
            foreach ($titulos as $key => $valor) {
                $objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($key+$indyy, $indx, $valor);
                $objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($key+$indyy)->setAutoSize(true);
                $objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($key+$indyy, $indx)->getFont()->setBold(true);
                $resul['indy'] = PHPExcel_Cell::stringFromColumnIndex($key+$indyy); 
            }

            $objPHPExcel->getActiveSheet()->getStyle($indy.$indx.":".$resul['indy'].$indx)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB('F2F2F2');

            $array_datos = array_map("array_values", $array_datos);
            //print_r($array_datos);
            foreach ($array_datos as $fkey => $fila) {
                foreach ($fila as $ckey => $valor) {
					$fila[$ckey] = trim(strip_tags($fila[$ckey]));
						$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($ckey+$indyy, $fkey + 1+$indx, $fila[$ckey]);
                }
                $resul['indx'] = $fkey + 1+$indx;
            }
//            $objPHPExcel->getActiveSheet()->getStyle($indy.$indx.':'.$resul['indy'].$resul['indx'])->getBorders()->getAllBorders()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        }
        return $resul;
    }

	public function excel_from_array($array_datos, $titulo, $filename, $tipo = "EXCEL") {

		$objPHPExcel = $this->excel_init();
		$objPHPExcel->setActiveSheetIndex(0);

		//write array
		$titulos = array_keys($array_datos[0]);
		foreach ($titulos as $key => $valor) {
			$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($key, 1, $valor);
			$objPHPExcel->getActiveSheet()->getColumnDimensionByColumn($key)->setAutoSize(true);
			$objPHPExcel->getActiveSheet()->getStyleByColumnAndRow($key, 1)->getFont()->setBold(true);
		}
		$array_datos = array_map("array_values", $array_datos);
		foreach ($array_datos as $fkey => $fila) {
			foreach ($fila as $ckey => $valor) {
				$objPHPExcel->getActiveSheet()->setCellValueByColumnAndRow($ckey, $fkey + 2, $fila[$ckey]);
			}
		}
		// Rename sheet
		$objPHPExcel->getActiveSheet()->setTitle($titulo);
		// Set active sheet index to the first sheet, so Excel opens this as the first sheet
		$objPHPExcel->setActiveSheetIndex(0);

		$this->excel_output($objPHPExcel, $filename, $tipo);
	}
}

?>